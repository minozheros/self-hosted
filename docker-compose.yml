version: '3.8'
services:
  syncing-server-js:
    image: minozheros/syncing-server-js
    build:
      context: https://github.com/standardnotes/syncing-server-js.git#develop
    container_name: syncing-server-js-standalone
    depends_on:
      - db
      - cache
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./docker/entrypoint.sh", "start-web"
    ]
    env_file: .env
    environment:
      PORT: 3000
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  syncing-server-js-worker:
    image: minozheros/syncing-server-js
    build:
      context: https://github.com/standardnotes/syncing-server-js.git#develop
    container_name: syncing-server-js-worker-standalone
    depends_on:
      - db
      - cache
      - syncing-server-js
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./docker/entrypoint.sh", "start-worker"
    ]
    env_file: .env
    environment:
      PORT: 3000
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  api-gateway:
    image: minozheros/api-gateway
    build:
      context: https://github.com/standardnotes/api-gateway.git#develop
    container_name: api-gateway-standalone
    depends_on:
      - auth
      - syncing-server-js
    env_file: docker/api-gateway.env
    ports:
      - ${EXPOSED_PORT}:3000
    environment:
      PORT: 3000
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET}'
      REDIS_URL: '${REDIS_URL}'
      FILES_SERVER_URL: '${FILES_SERVER_URL}'
    entrypoint: [
      "./wait-for.sh", "auth", "3000",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./wait-for.sh", "files", "3000",
      "./docker/entrypoint.sh", "start-web"
    ]
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  auth:
    image: minozheros/auth
    build:
      context: https://github.com/standardnotes/auth.git#develop
    container_name: auth-standalone
    depends_on:
      - db
      - cache
      - syncing-server-js
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "syncing-server-js", "3000",
      "./docker/entrypoint.sh", "start-web"
    ]
    env_file: docker/auth.env
    environment:
      PORT: 3000
      DB_HOST: '${DB_HOST}'
      DB_REPLICA_HOST: '${DB_REPLICA_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_DEBUG_LEVEL: '${DB_DEBUG_LEVEL}'
      DB_MIGRATIONS_PATH: '${DB_MIGRATIONS_PATH}'
      REDIS_URL: '${REDIS_URL}'
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET}'
      VALET_TOKEN_SECRET: '${VALET_TOKEN_SECRET}'
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  auth-worker:
    image: minozheros/auth
    build:
      context: https://github.com/standardnotes/auth.git#develop
    container_name: auth-worker-standalone
    depends_on:
      - db
      - cache
      - auth
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./wait-for.sh", "auth", "3000",
      "./docker/entrypoint.sh", "start-worker"
    ]
    env_file: docker/auth.env
    environment:
      PORT: 3000
      DB_HOST: '${DB_HOST}'
      DB_REPLICA_HOST: '${DB_REPLICA_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_DEBUG_LEVEL: '${DB_DEBUG_LEVEL}'
      DB_MIGRATIONS_PATH: '${DB_MIGRATIONS_PATH}'
      REDIS_URL: '${REDIS_URL}'
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET}'
      VALET_TOKEN_SECRET: '${VALET_TOKEN_SECRET}'
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  files:
    build:
      context: https://github.com/standardnotes/files.git#develop
    container_name: files-standalone
    entrypoint: [
      "./wait-for.sh", "db", "3306",
      "./wait-for.sh", "cache", "6379",
      "./docker/entrypoint.sh", "start-web"
    ]
    ports:
      - ${EXPOSED_FILES_PORT}:3000
    env_file: docker/files.env
    environment:
      FILE_UPLOAD_PATH: '${FILE_UPLOAD_PATH}'
      VALET_TOKEN_SECRET: '${VALET_TOKEN_SECRET}'
    volumes:
      - ./${FILE_UPLOAD_PATH}:/var/www/${FILE_UPLOAD_PATH}
    restart: unless-stopped
    networks:
      - standardnotes_standalone

  db:
    image: mariadb:10.5
    container_name: db-standalone
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      FILES_QUOTA: '${FILES_QUOTA}'
    expose:
      - 3306
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./data/import:/docker-entrypoint-initdb.d
    networks:
      - standardnotes_standalone

  cache:
    image: redis:6.0-alpine
    container_name: cache-standalone
    volumes:
      - ./data/redis/:/data
    expose:
      - 6379
    restart: unless-stopped
    networks:
      - standardnotes_standalone

networks:
  standardnotes_standalone:
    name: standardnotes_standalone
